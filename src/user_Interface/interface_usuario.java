/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package user_Interface;

import MyCustomFile.archivos;



import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

import MyCustomFile.archivos;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author copad
 */
public class interface_usuario extends javax.swing.JFrame {

    private static String ruta;
    private static String ruta_imagen;
    protected Thread h1_aceptar;
    protected Thread h2_leer;

    /**
     * Creates new form interface_usuario
     */
    public interface_usuario() {

        this.setTitle("Editor de texto");
        this.setResizable(false);
        try {
            Image imagenInterna = new ImageIcon(getClass().getResource("ico.png")).getImage();

            this.setIconImage(imagenInterna);
        } catch (Exception e) {
        }

        initComponents();

    }
    public void actuacizar(){
        try {
            FileReader archivo = new FileReader(ruta);
            String h="hola";
                BufferedReader mibuffer = new BufferedReader(archivo);
                areaTexto.read(mibuffer, "");
                
            
        } catch (IOException e) {
            System.out.println("no se encontro el archivo");
        }
        
    }
    protected void Stop_h1() {
        try {
            h1_aceptar.join();
        } catch (InterruptedException ex) {
            Logger.getLogger(interface_usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    protected void Stop_h2() {
        try {
            h2_leer.join();
        } catch (InterruptedException ex) {
            Logger.getLogger(interface_usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaTexto = new javax.swing.JTextArea();
        alert = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        menuArchivos = new javax.swing.JMenu();
        opcionMenuNuevo = new javax.swing.JMenuItem();
        opcionMenuAbrir = new javax.swing.JMenuItem();
        opcionMenuGuardar = new javax.swing.JMenuItem();
        opcionMenuGuardarComo = new javax.swing.JMenuItem();
        opcionMenuEliminar = new javax.swing.JMenuItem();
        opcionMenuSalir = new javax.swing.JMenuItem();
        opcionMenuRemplazar = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        opcionMenuCortar = new javax.swing.JMenuItem();
        MenuAbrir = new javax.swing.JMenu();
        MenuImagenAbrir = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();
        contentMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        desktopPane.add(jButton1);
        jButton1.setBounds(110, 380, 90, 32);

        jButton2.setText("cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        desktopPane.add(jButton2);
        jButton2.setBounds(430, 380, 100, 32);

        jButton3.setText("restaurar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        desktopPane.add(jButton3);
        jButton3.setBounds(270, 380, 100, 32);

        areaTexto.setColumns(20);
        areaTexto.setRows(5);
        areaTexto.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                areaTextoAncestorMoved(evt);
            }
        });
        jScrollPane1.setViewportView(areaTexto);

        desktopPane.add(jScrollPane1);
        jScrollPane1.setBounds(50, 20, 580, 300);

        alert.setForeground(new java.awt.Color(241, 74, 239));
        desktopPane.add(alert);
        alert.setBounds(240, 330, 190, 40);

        menuArchivos.setMnemonic('f');
        menuArchivos.setText("Archivo");

        opcionMenuNuevo.setMnemonic('o');
        opcionMenuNuevo.setText("nuevo");
        opcionMenuNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuNuevoActionPerformed(evt);
            }
        });
        menuArchivos.add(opcionMenuNuevo);

        opcionMenuAbrir.setMnemonic('s');
        opcionMenuAbrir.setText("abrir");
        opcionMenuAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuAbrirActionPerformed(evt);
            }
        });
        menuArchivos.add(opcionMenuAbrir);

        opcionMenuGuardar.setMnemonic('a');
        opcionMenuGuardar.setText("guardar");
        opcionMenuGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuGuardarActionPerformed(evt);
            }
        });
        menuArchivos.add(opcionMenuGuardar);

        opcionMenuGuardarComo.setMnemonic('x');
        opcionMenuGuardarComo.setText("guardar como");
        opcionMenuGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuGuardarComoActionPerformed(evt);
            }
        });
        menuArchivos.add(opcionMenuGuardarComo);

        opcionMenuEliminar.setMnemonic('x');
        opcionMenuEliminar.setText("eliminar");
        opcionMenuEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuEliminarActionPerformed(evt);
            }
        });
        menuArchivos.add(opcionMenuEliminar);

        opcionMenuSalir.setMnemonic('x');
        opcionMenuSalir.setText("salir");
        opcionMenuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuSalirActionPerformed(evt);
            }
        });
        menuArchivos.add(opcionMenuSalir);

        menuBar.add(menuArchivos);

        opcionMenuRemplazar.setMnemonic('e');
        opcionMenuRemplazar.setText("Editor");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("remplazar");
        cutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cutMenuItemActionPerformed(evt);
            }
        });
        opcionMenuRemplazar.add(cutMenuItem);

        opcionMenuCortar.setMnemonic('y');
        opcionMenuCortar.setText("cortar");
        opcionMenuRemplazar.add(opcionMenuCortar);

        menuBar.add(opcionMenuRemplazar);

        MenuAbrir.setMnemonic('h');
        MenuAbrir.setText("Imagen");

        MenuImagenAbrir.setMnemonic('c');
        MenuImagenAbrir.setText("abrir");
        MenuImagenAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuImagenAbrirActionPerformed(evt);
            }
        });
        MenuAbrir.add(MenuImagenAbrir);

        menuBar.add(MenuAbrir);

        menuAyuda.setMnemonic('h');
        menuAyuda.setText("Ayuda");

        contentMenuItem.setMnemonic('c');
        contentMenuItem.setText("Contents");
        contentMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contentMenuItemActionPerformed(evt);
            }
        });
        menuAyuda.add(contentMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        menuAyuda.add(aboutMenuItem);

        menuBar.add(menuAyuda);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void opcionMenuGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuGuardarComoActionPerformed
        System.exit(0);
    }//GEN-LAST:event_opcionMenuGuardarComoActionPerformed

    private void opcionMenuEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuEliminarActionPerformed
        File file=new File(ruta);
        areaTexto.setText("");
        file.delete();
        
    }//GEN-LAST:event_opcionMenuEliminarActionPerformed

    private void opcionMenuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_opcionMenuSalirActionPerformed

    private void opcionMenuNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuNuevoActionPerformed
        JFileChooser escojerArchivo = new JFileChooser();
        int valor = escojerArchivo.showOpenDialog(escojerArchivo);
        if (valor == JFileChooser.APPROVE_OPTION) {
            ruta = escojerArchivo.getSelectedFile().getAbsolutePath() + ".txt";
        }
    }//GEN-LAST:event_opcionMenuNuevoActionPerformed

    private void opcionMenuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuAbrirActionPerformed

        Runnable r = new hilo_leer();
        h2_leer = new Thread(r);
        h2_leer.start();
        



    }//GEN-LAST:event_opcionMenuAbrirActionPerformed

    private void opcionMenuGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuGuardarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_opcionMenuGuardarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        Runnable r = new hilo_aceptar();
        h1_aceptar = new Thread(r);
        h1_aceptar.start();
        


    }//GEN-LAST:event_jButton1ActionPerformed

    private void areaTextoAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_areaTextoAncestorMoved

    }//GEN-LAST:event_areaTextoAncestorMoved

    private void contentMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contentMenuItemActionPerformed

    }//GEN-LAST:event_contentMenuItemActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        actuacizar();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        ventana1 v=new ventana1();
        desktopPane.add(v);
        v.show();
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void MenuImagenAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuImagenAbrirActionPerformed
        JFileChooser escojer=new JFileChooser();
        int v=escojer.showOpenDialog(escojer);
        imagen img;
        
        if (v == JFileChooser.APPROVE_OPTION) {
            ruta_imagen = escojer.getSelectedFile().getAbsolutePath();
            img = new imagen(ruta_imagen);
            img.setLocationRelativeTo(null);
            img.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            img.setVisible(true);

        }

        
        
        
    }//GEN-LAST:event_MenuImagenAbrirActionPerformed

    private void cutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cutMenuItemActionPerformed
        BuscarRemplazar buscar=new BuscarRemplazar(ruta);
        buscar.setVisible(true);
        buscar.setLocationRelativeTo(null);
        buscar.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        buscar.setTitle("Buscar y Remplazar");
        
        
        
    }//GEN-LAST:event_cutMenuItemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MenuAbrir;
    private javax.swing.JMenuItem MenuImagenAbrir;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JLabel alert;
    private javax.swing.JTextArea areaTexto;
    private javax.swing.JMenuItem contentMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu menuArchivos;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem opcionMenuAbrir;
    private javax.swing.JMenuItem opcionMenuCortar;
    private javax.swing.JMenuItem opcionMenuEliminar;
    private javax.swing.JMenuItem opcionMenuGuardar;
    private javax.swing.JMenuItem opcionMenuGuardarComo;
    private javax.swing.JMenuItem opcionMenuNuevo;
    private javax.swing.JMenu opcionMenuRemplazar;
    private javax.swing.JMenuItem opcionMenuSalir;
    // End of variables declaration//GEN-END:variables

    class hilo_aceptar implements Runnable {

        @Override
        public void run() {

                if (ruta != null) {
                    try {
                        FileWriter archivo = new FileWriter(ruta);
                        BufferedWriter mibuffer = new BufferedWriter(archivo);
                        mibuffer.write(areaTexto.getText());
                        mibuffer.flush();
                        archivo.close();
                        
                        alert.setText("se guardo correctamente");
                        
                    } catch (IOException e) {
                        System.out.println("no se encontro el archivo");
                    }
                    
                }
                
            try {
                Thread.sleep(3000);
            } catch (InterruptedException ex) {
                Logger.getLogger(interface_usuario.class.getName()).log(Level.SEVERE, null, ex);
            }

            alert.setText("");
            Stop_h1();
        }
        
        
        
        
    }
    class hilo_leer implements Runnable {
        archivos a=new archivos();
        @Override
        public void run() {
            JFileChooser escojerArchivo = new JFileChooser();
            escojerArchivo.setAcceptAllFileFilterUsed(false);
            
            FileNameExtensionFilter filtro=new FileNameExtensionFilter("Texto (*.txt)", "txt");
            FileNameExtensionFilter filtro2=new FileNameExtensionFilter("Texto (*.java)", "java");
            escojerArchivo.setFileFilter(filtro);
            escojerArchivo.setFileFilter(filtro2);
            int valor = escojerArchivo.showOpenDialog(escojerArchivo);
            
            if (valor == JFileChooser.APPROVE_OPTION) {
                ruta = escojerArchivo.getSelectedFile().getAbsolutePath();
                File ar=escojerArchivo.getSelectedFile();
                
                try {
                    FileReader archivo = new FileReader(ruta);
                    if(a.accept(ar)){
                        BufferedReader mibuffer = new BufferedReader(archivo);
                        areaTexto.read(mibuffer, ""); 
                    }
                    Stop_h2();
                } catch (IOException e) {
                    System.out.println("no se encontro el archivo");
                }
            }
        }
        
        
    }
}


    
    

